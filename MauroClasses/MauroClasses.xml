<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>MauroClasses</name>
  </assembly>
  <members>
    <member name="N:MauroDataModeller.MauroTemplates">
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.Project">
      <summary>
$para$Main Mauro Template Manager project class $para-end$ $bulletted-list$$bul-item$$bul-descr$Handles file open and save, $bul-descr-end$$bul-item-end$$bul-item$$bul-descr$Connects to a Mauro endpoint$bul-descr-end$$bul-item-end$$bulletted-list-end$ $para$$para-end$</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.Endpoint">
      <summary>
Gets or sets the Mauro endpoint connection details</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.Filename">
      <summary>
Gets or sets the project's filename</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.FileType">
      <summary>
Gets or sets the filetype.</summary>
      <remarks>
The only permitted value is "MauroProject".  Any other value will be rejected as an invalid file.</remarks>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.Actions">
      <summary>
Gets or sets the list of Freemarker action scripts.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.Models">
      <summary>
Gets or sets the list of Mauro model identifiers to apply the Freemarker template to.</summary>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.LoadProject(System.String)">
      <summary>
Read a project as a JSON file</summary>
      <param name="Filename">
Filename of the project to read</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.ImportTemplate(System.String)">
      <summary>
Imports the template file specified</summary>
      <param name="Filename">
Full filename of the file to import</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.ExportTemplate(System.String,MauroDataModeller.MauroTemplates.FreemarkerAction)">
      <summary>
Writes out an action's template to the specified filename</summary>
      <param name="Filename">
Full path of the output filename</param>
      <param name="Action">
FreemarkerAction defining the template</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.SaveProject(System.Boolean,System.String)">
      <summary>
Save the project to disk</summary>
      <param name="ClobberPassword">
True to wipe out the username and password details</param>
      <param name="SaveAsFilename">
An optional filename to use instead of the project default filename</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.#ctor(System.String)">
      <summary>
Load the specified Mauro Project file</summary>
      <param name="OpenFilename">
Full filepath of the file to open</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.#ctor">
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Project.#ctor(System.Uri,System.String,System.String)">
      <summary>
Ctreates a new project with specified endpoint.  This does not connect to the endpoint</summary>
      <param name="EndpointURL">
URL of the endpoint</param>
      <param name="Username">
Username to authenticate to the endpoint</param>
      <param name="Password">
Password to authenticate to the endpoint</param>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.Project.MauroEndpoint">
      <summary>
Connection details to a Mauro endpoint but does not handle the connection to that endpoint.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.MauroEndpoint.EndpointURL">
      <summary>
Gets or sets the http URL to access the Mauro endpoint.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.MauroEndpoint.Username">
      <summary>
Gets or sets the username used to identify the user seeking to access the Mauro endpoint.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.MauroEndpoint.Password">
      <summary>
Gets or sets the password used to authenticate the username against the Mauro endpoint.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.Project.MauroEndpoint.Timeout">
      <summary>
Gets or sets the TimeSpan used by the endpoint connection to connect to a Mauro API.</summary>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.ActionTypes">
      <summary>
The type of entity to work on</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionTypes.actionClass">
      <summary>
Action is on each class in each of the selected data models</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionTypes.actionSingleModel">
      <summary>
Action is applied independently to each data model selected in turn</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionTypes.actionAllModels">
      <summary>
Action is applied to all the selected data models creating a single output</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionTypes.actionTerminology">
      <summary>
Action is applied to each terminology in each of the selected data models</summary>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.ActionEntries">
      <summary>
A list of ActionEntry instances for use in the queue</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntries.Entries">
      <summary>
Gets or sets the list of ActionEntry classes.</summary>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.ActionEntries.FindByID(System.Guid)">
      <summary>
Finds a specific entry by the ID</summary>
      <remarks>
If more than one entry exist (a data error) only the first entry will be returned</remarks>
      <returns>
The ActionEntry with the specified ID</returns>
      <param name="ID">
ID of the ActionEntry to find</param>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntries.NotStarted">
      <summary>
Gets the number of ActionEntry classes in the list where the ActionEntry has not started executing.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntries.InProgress">
      <summary>
Gets the number of ActionEntry classes in the list where the ActionEntry is currently processing</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntries.Success">
      <summary>
Gets the number of ActionEntry classes in the list where the ActionEntry has completed processing successfully</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntries.Failed">
      <summary>
Gets the number of ActionEntry classes in the list where the ActionEntry has completed processing but has not been successful</summary>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.ActionEntries.Start(System.Int32)">
      <summary>
Checks the queue of pending action entries and if there are less than the limit in progress, initiates separate threads for pending entries up to the limit.</summary>
      <param name="limit">
Maximum number of threads to be running at once</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.ActionEntries.Clear">
      <summary>
Clears down the list of ActionEntry classes</summary>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.ActionEntry">
      <summary>
An individual action within the Action Entry queue</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntry.ModelIDs">
      <summary>
Gets or sets the list of data model identifier Guids.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntry.Action">
      <summary>
Gets or sets the action to perform.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntry.ActionResponses">
      <summary>
Gets or sets the list of responses where an actionentry has been executed.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntry.Status">
      <summary>
Gets or sets the current Action Outcome Status for the action entry.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntry.ActionEntryID">
      <summary>
Gets the unique identifier for the Action Entry.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionEntry.OutputDirectory">
      <summary>
Gets or sets the directory files will be stored in.</summary>
      <remarks>
The system's current directory will be used if the output directory is not specified on creation</remarks>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.ActionEntry.#ctor">
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.FreemarkerAction">
      <summary>
The template action to execute and the file details for storing the output</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.Template">
      <summary>
Gets or sets the freemarker template to execute.</summary>
      <seealso cref="https://freemarker.apache.org/">
Apache Freemarker</seealso>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.FilePrefix">
      <summary>
Gets or sets the text to place at the start of the filename.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.FileSuffix">
      <summary>
Gets or sets the text to place at the end of the filename..</summary>
      <remarks>
This should include any suffix to assist in identifying the type of output, e.g. ".html", ".dita"</remarks>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.ActionType">
      <summary>
Gets or sets the type of action.</summary>
      <seealso cref="T:MauroDataModeller.MauroTemplates.ActionTypes">
ActionTypes</seealso>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.Name">
      <summary>
Gets or sets a meaningful name fo rthe action.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.Description">
      <summary>
Gets or sets a meaningful description of the action.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.FreemarkerAction.id">
      <summary>
Gets a unique identifier for the action set at creation.</summary>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.ActionResponse">
      <summary>
The response output for an executed action</summary>
      <remarks>
This is only populated where the ActionOutcomeStatus is <see cref="MauroDataModeller.MauroTemplates.ActionStatus.Success" /> or <see cref="MauroDataModeller.MauroTemplates.ActionStatus.Failed" /></remarks>
      <seealso cref="T:MauroDataModeller.MauroTemplates.ActionStatus">
ActionStatus</seealso>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionResponse.ResponseID">
      <summary>
Gets a unique identifier for this response.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionResponse.ResponseDescription">
      <summary>
Gets or sets the description of the response.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionResponse.responseOutcome">
      <summary>
Gets or sets the outcome of executing this action.</summary>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionResponse.OutputFilename">
      <summary>
Gets or sets the full filename of the generated file.</summary>
      <remarks>
Populated if the responseOutcome is Success</remarks>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionResponse.ErrorFileName">
      <summary>
Gets or sets the HTML file name for an error file.</summary>
      <remarks>
Populated if the responseOutcome is Failed</remarks>
    </member>
    <member name="P:MauroDataModeller.MauroTemplates.ActionResponse.Response">
      <summary>
Gets or sets the HTTP response from the server to the request.</summary>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.ActionStatus">
      <summary>
The status of an Action</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionStatus.NotStarted">
      <summary>
The action has been added to a queue to execute but has not started executing</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionStatus.InProgress">
      <summary>
The action is currently being executed</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionStatus.Success">
      <summary>
The action was executed successfully</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionStatus.Failed">
      <summary>
The action was executed but failed</summary>
    </member>
    <member name="F:MauroDataModeller.MauroTemplates.ActionStatus.Retry">
      <summary>
The action is queued for retry</summary>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.InvalidMauroProjectFileException">
      <summary>
Exception for when a Mauro Template Project file is invalid</summary>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.InvalidMauroProjectFileException.#ctor">
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.InvalidMauroProjectFileException.#ctor(System.String)">
      <param name="message">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.InvalidMauroProjectFileException.#ctor(System.String,System.Exception)">
      <param name="message">
</param>
      <param name="inner">
</param>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.Freemarker">
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Freemarker.QueueProjectActionEntries(MauroDataModeller.MauroTemplates.Project,System.String)">
      <summary>
Executes all the template actions in a project against all the models in that project</summary>
      <param name="Project">
Project containing the models and actions</param>
      <param name="OutputDirectory">
Filepath as a string for the output directory. If not specified the application current directory is used.</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Freemarker.RunActionEntryQueueSync">
      <summary>
Run all the pending action entries in the queue synchronously.</summary>
      <remarks>
It is recommended StartActionEntryQueueAsync</remarks>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Freemarker.ProcessActionEntry(MauroDataModeller.MauroTemplates.ActionEntry@)">
      <summary>
Executes an ActionEntry definition against the current endpoint</summary>
      <param name="ActionEntry">
Action template and list of models to apply</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Freemarker.PrettyJson(System.String)">
      <summary>
Concert a JSON string to be indented</summary>
      <remarks>
Applies JSON serialisation with writeIndented = true</remarks>
      <returns>
JSON text in pretty form</returns>
      <param name="uglyJSON">
JSON text in minifieed or inconsistent form</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.Freemarker.PrettyJSONhtml(System.String)">
      <summary>
Show a JSON</summary>
      <param name="uglyJSON">
</param>
    </member>
    <member name="T:MauroDataModeller.MauroTemplates.InvalidFreemarkerProjectException">
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.InvalidFreemarkerProjectException.#ctor">
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.InvalidFreemarkerProjectException.#ctor(System.String)">
      <param name="message">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroTemplates.InvalidFreemarkerProjectException.#ctor(System.String,System.Exception)">
      <param name="message">
</param>
      <param name="inner">
</param>
    </member>
    <member name="N:MauroDataModeller.MauroModel">
    </member>
    <member name="T:MauroDataModeller.MauroModel.dataTypeDomainTypeEnum">
    </member>
    <member name="T:MauroDataModeller.MauroModel.EndpointConnection">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.Username">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.Password">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.Endpoint">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.Timeout">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.Responses">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.LoginStatus">
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.LoginDetails">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.ApplyModelTemplateAsync(System.Guid,System.String)">
      <param name="ID">
</param>
      <param name="Template">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.ApplyModelTemplate(System.Guid,System.String)">
      <param name="ID">
</param>
      <param name="Template">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.ApplyModelClassTemplateAsync(System.Guid,System.Guid,System.String)">
      <param name="ModelID">
</param>
      <param name="ClassID">
</param>
      <param name="Template">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.ApplyModelClassTemplate(System.Guid,System.Guid,System.String)">
      <param name="ModelID">
</param>
      <param name="ClassID">
</param>
      <param name="Template">
</param>
    </member>
    <member name="P:MauroDataModeller.MauroModel.EndpointConnection.MauroModels">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.LoginAsync">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.Login">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.#ctor">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModelsAsync">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModels">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModelAsync(System.Guid)">
      <param name="ModelID">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModel(System.Guid)">
      <param name="modelID">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModelChildClassesAsync(System.Guid)">
      <param name="ModelID">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModelAllClassesAsync(System.Guid)">
      <param name="ModelID">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.GetModelClasses(System.Guid)">
      <param name="ModelID">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.SaveModels(System.String)">
      <param name="Filename">
</param>
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.LogoutAsync">
    </member>
    <member name="M:MauroDataModeller.MauroModel.EndpointConnection.Logout">
    </member>
    <member name="T:MauroDataModeller.MauroModel.MauroResponse">
    </member>
    <member name="P:MauroDataModeller.MauroModel.MauroResponse.url">
    </member>
    <member name="P:MauroDataModeller.MauroModel.MauroResponse.Body">
    </member>
    <member name="P:MauroDataModeller.MauroModel.MauroResponse.Response">
    </member>
    <member name="T:MauroDataModeller.MauroModel.PostResponse">
      <summary>
Class to pass back http post responses</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.PostResponse.Body">
    </member>
    <member name="P:MauroDataModeller.MauroModel.PostResponse.Result">
    </member>
    <member name="T:MauroDataModeller.MauroModel.LoginResponse">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginResponse.id">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginResponse.emailAddress">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginResponse.firstName">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginResponse.lastName">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginResponse.userRole">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginResponse.disabled">
    </member>
    <member name="T:MauroDataModeller.MauroModel.LoginRequest">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginRequest.username">
    </member>
    <member name="P:MauroDataModeller.MauroModel.LoginRequest.password">
    </member>
    <member name="T:MauroDataModeller.MauroModel.Models">
      <summary>
Mauro dataModels data structure count of models as integer list of Mauro model data structures</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.Models.count">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Models.items">
    </member>
    <member name="T:MauroDataModeller.MauroModel.Model">
      <summary>
Mauro dataModel datastructure</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.id">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.domainType">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.label">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.aliases">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.description">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.author">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.organisation">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.editable">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.documentationVersion">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.lastUpdated">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.classifiers">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.type">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.finalised">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.metadata">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.childDataClasses">
      <summary>
### TODO: Add a description</summary>
      <value>
dataClassesType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.Model.descendantDataClasses">
    </member>
    <member name="T:MauroDataModeller.MauroModel.dataClassesType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassesType.count">
      <summary>
### TODO: Add a description</summary>
      <value>
dataClassType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassesType.dataClass">
    </member>
    <member name="T:MauroDataModeller.MauroModel.aliasesType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.aliasesType.alias">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.metadataType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.metadataType.namespace">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.metadataType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.metadataType.key">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.metadataType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.metadataType.value">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.metadataCollectionType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.metadataCollectionType.metadata">
      <summary>
### TODO: Add a description</summary>
      <value>
metadataType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.dataClassType">
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.aliases">
      <summary>
### TODO: Add a description</summary>
      <value>
aliasesType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.label">
      <summary>
### TODO: Add a description</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.classifiers">
      <summary>
### TODO: Add a description</summary>
      <value>
classifiersType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.metadata">
      <summary>
### TODO: Add a description</summary>
      <value>
metadataCollectionType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.childDataClasses">
      <summary>
### TODO: Add a description</summary>
      <value>
dataClassesType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.minMultiplicity">
      <summary>
If not provided then will default to 1 (required)</summary>
      <value>
multiplicity</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.description">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.maxMultiplicity">
      <summary>
If not provided then will default to 1 (required)</summary>
      <value>
multiplicity</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.childDataElements">
      <summary>
### TODO: Add a description</summary>
      <value>
dataElementsType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataClassType.annotations">
      <summary>
### TODO: Add a description</summary>
      <value>
annotationsType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.annotationsType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.annotationsType.annotation">
      <summary>
### TODO: Add a description</summary>
      <value>
annotationType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.annotationType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.annotationType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.annotationType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.annotationType.description">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.annotationType.label">
      <summary>
Only optional if is a child annotation, the top level annotation must have a label</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.annotationType.childAnnotations">
      <summary>
### TODO: Add a description</summary>
      <value>
annotationsType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.classifiersType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.classifiersType.classifier">
      <summary>
### TODO: Add a description</summary>
      <value>
classifierType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.classifierType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.classifierType.label">
      <summary>
### TODO: Add a description</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.classifierType.description">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.classifierType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.classifierType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.Classifier">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Classifier.id">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Classifier.label">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Classifier.lastUpdated">
    </member>
    <member name="T:MauroDataModeller.MauroModel.dataTypeType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.domainType">
      <summary>
### TODO: Add a description</summary>
      <value>
dataTypeDomainTypeEnum</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.referenceClass">
      <summary>
Mandatory if domainType is "ReferenceType". Ignored otherwise</summary>
      <value>
dataClassType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.enumerationValues">
      <summary>
Mandatory if domainType is "EnumerationType". Ignored otherwise</summary>
      <value>
enumerationValuesType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.metadata">
      <summary>
### TODO: Add a description</summary>
      <value>
metadataCollectionType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.annotations">
      <summary>
### TODO: Add a description</summary>
      <value>
annotationsType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.aliases">
      <summary>
### TODO: Add a description</summary>
      <value>
aliasesType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.classifiers">
      <summary>
### TODO: Add a description</summary>
      <value>
classifiersType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.units">
      <summary>
Optional if domainType is "PrimitiveType". Ignored otherwise</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.label">
      <summary>
### TODO: Add a description</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataTypeType.description">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.enumerationValuesType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.enumerationValuesType.enumerationValue">
      <summary>
### TODO: Add a description</summary>
      <value>
enumerationValueType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.enumerationValueType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.enumerationValueType.label">
      <summary>
### TODO: Add a description</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.enumerationValueType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.enumerationValueType.value">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.enumerationValueType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.enumerationValueType.key">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.dataElementsType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementsType.dataElement">
      <summary>
### TODO: Add a description</summary>
      <value>
dataElementType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.dataElementType">
      <summary>
##TODO Add description comment</summary>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.label">
      <summary>
### TODO: Add a description</summary>
      <value>
mandatoryString</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.dataType">
      <summary>
If you've already provided the full DataType information in the DataModel list of DataTypes, then you need only provide the label and domainType here to link to the DataType. If you have not provided all the information at the DataModel level then a DataType will be created using the information provided.</summary>
      <value>
dataTypeType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.classifiers">
      <summary>
### TODO: Add a description</summary>
      <value>
classifiersType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.id">
      <summary>
### TODO: Add a description</summary>
      <value>
uuid</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.maxMultiplicity">
      <summary>
If not provided then will default to 1 (required)</summary>
      <value>
multiplicity</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.annotations">
      <summary>
### TODO: Add a description</summary>
      <value>
annotationsType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.minMultiplicity">
      <summary>
If not provided then will default to 1 (required)</summary>
      <value>
multiplicity</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.description">
      <summary>
### TODO: Add a description</summary>
      <value>
string</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.aliases">
      <summary>
### TODO: Add a description</summary>
      <value>
aliasesType</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.lastUpdated">
      <summary>
### TODO: Add a description</summary>
      <value>
dateTime</value>
    </member>
    <member name="P:MauroDataModeller.MauroModel.dataElementType.metadata">
      <summary>
### TODO: Add a description</summary>
      <value>
metadataCollectionType</value>
    </member>
    <member name="T:MauroDataModeller.MauroModel.Metadata">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Metadata.id">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Metadata.mauroNamespace">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Metadata.key">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Metadata.value">
    </member>
    <member name="P:MauroDataModeller.MauroModel.Metadata.lastUpdated">
    </member>
  </members>
</doc>
